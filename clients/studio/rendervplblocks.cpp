/*
	Aseba - an event-based framework for distributed robot control
	Copyright (C) 2007--2015:
		Stephane Magnenat <stephane at magnenat dot net>
		(http://stephane.magnenat.net)
		and other contributors, see authors.txt for details
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU Lesser General Public License as published
	by the Free Software Foundation, version 3 of the License.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Lesser General Public License for more details.
	
	You should have received a copy of the GNU Lesser General Public License
	along with this program. If not, see <http://www.gnu.org/licenses/>.
*/


#include <signal.h>
#include <QApplication>
#include <QString>
#include <QSvgGenerator>
#include <QPainter>
#include <QSize>
#include <QDebug>
#include <iostream>
#include <stdexcept>
#include "plugins/ThymioVPL/EventBlocks.h"
#include "plugins/ThymioVPL/ActionBlocks.h"
#include "plugins/ThymioVPL/StateBlocks.h"

using namespace std;

/**
	\defgroup rendervplblocks Helper application that generates SVG files of VPL blocks
*/

#define RENDER_BLOCK(T) renderBlock<T>(# T);
#define RENDER_BLOCK_ADVANCED(T, advanced) renderBlock<T>(# T, advanced);

namespace Aseba { namespace ThymioVPL {
	
	template<typename T>
	void renderBlock(QString templateName)
	{
		QSvgGenerator generator;
		generator.setFileName(templateName + ".svg");
		generator.setSize(QSize(256, 256));
		generator.setViewBox(QRectF(0, 0, 256, 256));
		generator.setTitle("VPL " + templateName);
		generator.setDescription("This image was generated by an helper tool part of Aseba, get it at http://thymio.org");
		
		QPainter painter(&generator);
		
		T block;
		block.render(painter);
	}
	
	template<typename T>
	void renderBlock(QString templateName, bool advanced)
	{
		QSvgGenerator generator;
		if (advanced)
			templateName += "-advanced";
		else
			templateName += "-simple";
		generator.setFileName(templateName + ".svg");
		generator.setSize(QSize(256, 256));
		generator.setViewBox(QRectF(0, 0, 256, 256));
		generator.setTitle("VPL " + templateName);
		generator.setDescription("This image was generated by an helper tool part of Aseba, get it at http://thymio.org");
		
		QPainter painter(&generator);
		
		T block(advanced);
		block.render(painter);
	}
	
	void renderBlocks()
	{
		// events
		RENDER_BLOCK(ArrowButtonsEventBlock);
		RENDER_BLOCK_ADVANCED(ProxEventBlock, false);
		RENDER_BLOCK_ADVANCED(ProxEventBlock, true);
		RENDER_BLOCK_ADVANCED(ProxGroundEventBlock, false);
		RENDER_BLOCK_ADVANCED(ProxGroundEventBlock, true);
		RENDER_BLOCK_ADVANCED(AccEventBlock, false);
		RENDER_BLOCK_ADVANCED(AccEventBlock, true);
		RENDER_BLOCK(ClapEventBlock);
		RENDER_BLOCK(TimeoutEventBlock);
		
		// filters
		RENDER_BLOCK(StateFilterCheckBlock);
		
		// actions
		RENDER_BLOCK(MoveActionBlock);
		RENDER_BLOCK(TopColorActionBlock);
		RENDER_BLOCK(BottomColorActionBlock);
		RENDER_BLOCK(SoundActionBlock);
		RENDER_BLOCK(TimerActionBlock);
		RENDER_BLOCK(StateFilterActionBlock);
	}
	
} } // namespace ThymioVPL / namespace Aseba

int main(int argc, char *argv[])
{
	QApplication app(argc, argv);
	
	Aseba::ThymioVPL::renderBlocks();
	
	return 0;
}


